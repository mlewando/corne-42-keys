#include <dt-bindings/zmk/keys.h>

#undef COMBO_HOOK
#define COMBO_HOOK global-quick-tap-ms = <150>;

#define COMBO_TERM_FAST 18
#define COMBO_TERM_SLOW 30

/ {
    combos {
        compatible = "zmk,combos";

        // left hand symbols
        combo_exclamation {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp EXCL>;
            key-positions = <LT4 LM4>;
        };
        combo_at {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp AT>;
            key-positions = <LT3 LM3>;
        };
        combo_hash {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp HASH>;
            key-positions = <LT2 LM2>;
        };
        combo_dollar {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp DOLLAR>;
            key-positions = <LT1 LM1>;
        };
        combo_percent {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp PERCENT>;
            key-positions = <LT0 LM0>;
        }

        combo_grave {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp GRAVE>;
            key-positions = <LM3 LB3>;
        }
        combo_backslash {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp BACKSLASH>;
            key-positions = <LM2 LB2>;
        }
        combo_equal {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp EQUAL>;
            key-positions = <LM1 LB1>;
        }
        combo_tilde {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp TILDE>;
            key-positions = <LM0 LB0>;
        }

        // right hand symbols
        combo_caret {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp CARET>;
            key-positions = <RT0 RM0>;
        };
        // math operations
        combo_plus {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp PLUS>;
            key-positions = <RT1 RM1>;
        };
        combo_minus {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp MINUS>;
            key-positions = <RM1 RB1>;
        };
        combo_asterisk {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp ASTERISK>;
            key-positions = <RT2 RM2>;
        };
        combo_slash {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp SLASH>;
            key-positions = <RM2 RB2>;
        };
        // rest of symbols
        combo_amps {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp AMPS>;
            key-positions = <RT3 RM3>;
        };

        combo_under {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp UNDER>;
            key-positions = <RM0 RB0>;
        };
        combo_pipe {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp PIPE>;
            key-positions = <RM3 RB3>;
        };

        // parentheses
        combo_lpar {
            timeout-ms = <COMBO_TERM_FAST>;
            bindings = <&hmr_lpar_lt RS(LCTRL) 0>;
            key-positions = <RM1 RM2>;
        };
        combo_rpar {
            timeout-ms = <COMBO_TERM_FAST>;
            bindings = <&hmr_rpar_gt LA(LCTRL) 0>;
            key-positions = <RM2 RM3>;
        };
        combo_lbkt_lbrc {
            timeout-ms = <COMBO_TERM_FAST>;
            bindings = <&kp LBKT>;
            key-positions = <RB1 RB2>;
        };
        combo_rbkt_rbrc {
            timeout-ms = <COMBO_TERM_FAST>;
            bindings = <&kp RBKT>;
            key-positions = <RB2 RB3>;
        };
    };
};