/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include "keys_pl_programmers.h"
#include "keypos_42keys.h"

#define MO_TOG(layer) &mo_tog layer layer
#define SL_TOG(layer) &sl_tog layer layer

#define BASE 0
#define NUMPAD 1
#define NAVI 2
#define SYMBOLS 3
#define CONTROL 4

#undef COMBO_HOOK
#define COMBO_HOOK global-quick-tap-ms = <150>;

#define COMBO_TERM_FAST 18
#define COMBO_TERM_SLOW 30

/ {
    combos {
        compatible = "zmk,combos";
        combo_at {
            timeout-ms = <COMBO_TERM_SLOW>;
            bindings = <&kp AT>;
            key-positions = <LT3 LM3>;
        };
    };
};

/ {
    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        td_shift: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "shift-caps word";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&sk LSHFT>, <&caps_word>;
        };

        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };

        sl_tog: behavior_sl_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "sl_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&sl>;
        };

        control_layer_mod: control_layer_mod {
            compatible = "zmk,behavior-mod-morph";
            label = "control_layer_mod";
            #binding-cells = <0>;
            bindings = <&kp F8>, <&tog CONTROL>;
            mods = <(MOD_LSFT)>;
        };
        
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &gresc   &kp PL_Q  &kp PL_W  &kp PL_E  &kp PL_R      &kp PL_T    &kp PL_Y  &kp PL_U  &kp PL_I  &kp PL_O  &kp PL_P  &bspc_del
  &kp TAB  &kp PL_A  &kp PL_S  &kp PL_D  &kp PL_F      &kp PL_G    &kp PL_H  &kp PL_J  &kp PL_K  &kp PL_L  &kp SEMI    &kp SQT
&td_shift  &kp PL_Z  &kp PL_X  &kp PL_C  &kp PL_V      &kp PL_B    &kp PL_N  &kp PL_M  &kp COMMA  &kp DOT  &kp FSLH   &sk RALT
                         &sk LCTRL  MO_TOG(NAVI)   &kp LEFT_GUI    &kp SPACE  MO_TOG(NUMPAD)   &kp RET
            >;
        };

        numad {
            bindings = <
&to 0   &trans  &trans  &trans  &trans     &trans    &kp PLUS   &kp N7  &kp N8  &kp N9   &kp ASTERISK  &trans
&trans  &trans  &trans  &kp DOT &kp COMMA  &trans    &kp MINUS  &kp N4  &kp N5  &kp N6   &kp SLASH     &trans
&trans  &trans  &trans  &trans  &trans     &trans    &kp EQUAL  &kp N1  &kp N2  &kp N3   &kp N0     &kp GRAVE
                        &trans  &trans     &trans    &trans  &trans  &trans
            >;
        };

        fn_navigation_layer {
            bindings = <
&to 0   &kp F1        &kp F2        &kp F3      &kp F4   &none       &none     &none    &kp UP        &none   &none   &trans
&trans  &kp F5        &kp F6        &kp F7      &control_layer_mod   &none       &none  &kp LEFT    &kp DOWN  &kp RIGHT   &trans  &trans
&trans  &kp F9        &kp F10       &kp 11      &kp F12  &none       &none     &none    &none         &none   &trans  &trans
                                    &trans      &trans   &trans      &trans    SL_TOG(SYMBOLS)    &trans
            >;
        };

        symbols {
            bindings = <
&to 0   &kp EXCL  &kp AT    &kp HASH  &kp DOLLAR  &kp PERCENT        &kp CARET  &kp AMPS   &kp ASTERISK  &kp LPAR        &kp RPAR     &trans
&trans  &none     &kp LBRC  &kp RBRC  &kp LBKT       &kp RBKT        &kp LPAR   &kp RPAR   &kp SLASH     &kp BACKSLASH   &kp SLASH  &kp PIPE
&trans  &trans    &trans    &trans    &trans           &trans        &trans     &trans     &trans        &trans          &trans       &trans
                        &trans  &trans     &trans    &trans  &trans  &trans
            >;
        };

        controol_layer {
            bindings = <
&to 0   &none         &none         &none         &none           &bt BT_CLR       &none  &none  &none  &none  &none  &none
&none   &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 5       &none  &none  &none  &none  &none  &none
&none   &none         &none         &out OUT_USB  &out OUT_BLE         &none       &none  &none  &none  &none  &none  &none
                                                        &trans &trans &trans       &trans &trans &trans
            >;
        };

    };
};
