/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "keys_pl_programmers.h"

/ {
    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        td_shift: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "shift-caps word";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LSHFT>, <&caps_word>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &gresc   &kp PL_Q  &kp PL_W  &kp PL_E  &kp PL_R  &kp PL_T    &kp PL_Y  &kp PL_U  &kp PL_I  &kp PL_O  &kp PL_P  &bspc_del
  &kp TAB  &kp PL_A  &kp PL_S  &kp PL_D  &kp PL_F  &kp PL_G    &kp PL_H  &kp PL_J  &kp PL_K  &kp PL_L  &kp SEMI    &kp SQT
&td_shift  &kp PL_Z  &kp PL_X  &kp PL_C  &kp PL_V  &kp PL_B    &kp PL_N  &kp PL_M  &kp COMMA  &kp DOT  &kp FSLH   &sk RALT
                         &kp LCTRL  MO_TOG(1)  &kp LEFT_GUI    &kp SPACE  MO_TOG(2)   &kp RET
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&to 0   &kp F1        &kp F2        &kp F3        &kp F4   &kp F5       &kp F9   &kp F10    &kp F11     &kp F12   &none  &trans
&trans  &none   &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &kp F6       &kp F8     &none    &kp UP        &none   &trans  &trans
&trans  &trans        &trans        &trans        &trans   &trans       &kp F7  &kp LEFT    &kp DOWN  &kp RIGHT   &trans  &trans
                                    &trans        &trans   &trans       &trans    &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&to 0   &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp EQUAL  &kp N7  &kp N8  &kp N9  &kp MINUS     &trans
&trans  &kp CARET &trans    &trans    &trans     &trans    &kp MINUS  &kp N4  &kp N5  &kp N6   &kp PLUS     &trans
&trans    &trans  &trans    &trans    &trans     &trans       &kp N0  &kp N1  &kp N2  &kp N3   &kp PIPE  &kp GRAVE
                            &trans    &trans     &trans       &trans  &trans  &trans
            >;
        };
    };
};
